{"version":3,"file":"ndarray-pixels-browser.modern.js","sources":["../src/browser-get-pixels.ts","../src/common.ts","../src/browser-save-pixels.ts","../src/index.ts"],"sourcesContent":["import ndarray from 'ndarray';\nimport type { NdArray } from 'ndarray';\n\nexport function getPixelsInternal(\n\tbuffer: Uint8Array,\n\tmimeType: string\n): Promise<NdArray<Uint8Array>> {\n\t// Warn for Data URIs, URLs, and file paths. Support removed in v3.\n\tif (!(buffer instanceof Uint8Array)) {\n\t\tthrow new Error('[ndarray-pixels] Input must be Uint8Array or Buffer.');\n\t}\n\n\tconst blob = new Blob([buffer], { type: mimeType });\n\tconst path = URL.createObjectURL(blob);\n\n\t// Decode image with Canvas API.\n\treturn new Promise((resolve, reject) => {\n\t\tconst img = new Image();\n\t\timg.crossOrigin = 'anonymous';\n\t\timg.onload = function () {\n\t\t\tURL.revokeObjectURL(path as string);\n\n\t\t\tconst canvas = document.createElement('canvas');\n\t\t\tcanvas.width = img.width;\n\t\t\tcanvas.height = img.height;\n\t\t\tconst context = canvas.getContext('2d')!;\n\t\t\tcontext.drawImage(img, 0, 0);\n\t\t\tconst pixels = context.getImageData(0, 0, img.width, img.height);\n\t\t\tresolve(\n\t\t\t\tndarray(\n\t\t\t\t\tnew Uint8Array(pixels.data),\n\t\t\t\t\t[img.width, img.height, 4],\n\t\t\t\t\t[4, 4 * img.width, 1],\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t);\n\t\t};\n\t\timg.onerror = (err) => {\n\t\t\tURL.revokeObjectURL(path as string);\n\t\t\treject(err);\n\t\t};\n\t\timg.src = path;\n\t});\n}\n","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\n\nexport function putPixelData(\n\tarray: NdArray<Uint8Array | Uint8ClampedArray>,\n\tdata: Uint8Array | Uint8ClampedArray,\n\tframe = -1\n): Uint8Array | Uint8ClampedArray {\n\tif (array.shape.length === 4) {\n\t\treturn putPixelData(array.pick(frame), data, 0);\n\t} else if (array.shape.length === 3) {\n\t\tif (array.shape[2] === 3) {\n\t\t\tops.assign(\n\t\t\t\tndarray(data, [array.shape[0], array.shape[1], 3], [4, 4 * array.shape[0], 1]),\n\t\t\t\tarray\n\t\t\t);\n\t\t\tops.assigns(ndarray(data, [array.shape[0] * array.shape[1]], [4], 3), 255);\n\t\t} else if (array.shape[2] === 4) {\n\t\t\tops.assign(\n\t\t\t\tndarray(data, [array.shape[0], array.shape[1], 4], [4, array.shape[0] * 4, 1]),\n\t\t\t\tarray\n\t\t\t);\n\t\t} else if (array.shape[2] === 1) {\n\t\t\tops.assign(\n\t\t\t\tndarray(data, [array.shape[0], array.shape[1], 3], [4, 4 * array.shape[0], 1]),\n\t\t\t\tndarray(\n\t\t\t\t\tarray.data,\n\t\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t\t[array.stride[0], array.stride[1], 0],\n\t\t\t\t\tarray.offset\n\t\t\t\t)\n\t\t\t);\n\t\t\tops.assigns(ndarray(data, [array.shape[0] * array.shape[1]], [4], 3), 255);\n\t\t} else {\n\t\t\tthrow new Error('[ndarray-pixels] Incompatible array shape.');\n\t\t}\n\t} else if (array.shape.length === 2) {\n\t\tops.assign(\n\t\t\tndarray(data, [array.shape[0], array.shape[1], 3], [4, 4 * array.shape[0], 1]),\n\t\t\tndarray(\n\t\t\t\tarray.data,\n\t\t\t\t[array.shape[0], array.shape[1], 3],\n\t\t\t\t[array.stride[0], array.stride[1], 0],\n\t\t\t\tarray.offset\n\t\t\t)\n\t\t);\n\t\tops.assigns(ndarray(data, [array.shape[0] * array.shape[1]], [4], 3), 255);\n\t} else {\n\t\tthrow new Error('[ndarray-pixels] Incompatible array shape.');\n\t}\n\treturn data;\n}\n","import type { NdArray } from 'ndarray';\nimport { putPixelData } from './common';\n\nexport interface EncoderOptions {\n\tquality?: number;\n}\n\nexport async function savePixelsInternal(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\tmimeType: string\n): Promise<Uint8Array>;\nexport async function savePixelsInternal(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\tmimeType: string,\n\toptions?: EncoderOptions\n): Promise<Uint8Array>;\nexport async function savePixelsInternal(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\tmimeType: string,\n\toptions: EncoderOptions = {}\n): Promise<Uint8Array> {\n\t// Create HTMLCanvasElement and write pixel data.\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = pixels.shape[0];\n\tcanvas.height = pixels.shape[1];\n\n\tconst context = canvas.getContext('2d')!;\n\tconst imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n\tputPixelData(pixels, imageData.data);\n\tcontext.putImageData(imageData, 0, 0);\n\n\tconst quality = options.quality ? options.quality / 100 : undefined;\n\n\t// Encode to target format.\n\tswitch (mimeType) {\n\t\tcase 'image/jpeg':\n\t\t\treturn streamCanvas(canvas, 'image/jpeg', quality);\n\t\tdefault:\n\t\t\treturn streamCanvas(canvas, mimeType);\n\t}\n}\n\n/** Creates readable stream from given HTMLCanvasElement and options. */\nfunction streamCanvas(\n\tcanvas: HTMLCanvasElement,\n\tmimeType: string,\n\tquality?: number\n): Promise<Uint8Array> {\n\treturn new Promise<Uint8Array>((resolve, reject) => {\n\t\tcanvas.toBlob(\n\t\t\tasync (blob) => {\n\t\t\t\tif (blob) {\n\t\t\t\t\tresolve(new Uint8Array(await blob.arrayBuffer()));\n\t\t\t\t} else {\n\t\t\t\t\treject(new Error('[ndarray-pixels] Failed to canvas.toBlob().'));\n\t\t\t\t}\n\t\t\t},\n\t\t\tmimeType,\n\t\t\tquality\n\t\t);\n\t});\n}\n","import type { NdArray } from 'ndarray';\nimport { getPixelsInternal } from './node-get-pixels';\nimport { savePixelsInternal } from './node-save-pixels';\n\n/**\n * Decodes image data to an `ndarray`.\n *\n * MIME type is optional when given a path or URL, and required when given a Uint8Array.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param data\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function getPixels(data: Uint8Array, mimeType: string): Promise<NdArray<Uint8Array>> {\n\treturn getPixelsInternal(data, mimeType);\n}\n\n/**\n * Encodes an `ndarray` as image data in the given format.\n *\n * If the source `ndarray` was constructed manually with default stride, use\n * `ndarray.transpose(1, 0)` to reshape it and ensure an identical result from getPixels(). For an\n * ndarray created by getPixels(), this isn't necessary.\n *\n * Accepts `image/png` or `image/jpeg` in Node.js, and additional formats on browsers with\n * the necessary support in Canvas 2D.\n *\n * @param pixels ndarray of shape W x H x 4.\n * @param mimeType `image/jpeg`, `image/png`, etc.\n * @returns\n */\nasync function savePixels(\n\tpixels: NdArray<Uint8Array | Uint8ClampedArray>,\n\tmimeType: string\n): Promise<Uint8Array> {\n\treturn savePixelsInternal(pixels, mimeType);\n}\n\nexport { getPixels, savePixels };\n"],"names":["getPixelsInternal","buffer","mimeType","Uint8Array","Error","blob","Blob","type","path","URL","createObjectURL","Promise","resolve","reject","img","Image","crossOrigin","onload","revokeObjectURL","canvas","document","createElement","width","height","context","getContext","drawImage","pixels","getImageData","ndarray","data","onerror","err","src","putPixelData","array","frame","shape","length","pick","ops","assign","assigns","stride","offset","savePixelsInternal","options","imageData","putImageData","quality","undefined","streamCanvas","toBlob","arrayBuffer","getPixels","savePixels"],"mappings":"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"}